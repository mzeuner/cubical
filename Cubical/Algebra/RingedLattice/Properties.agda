{-# OPTIONS --safe --lossy-unification #-}
module Cubical.Algebra.RingedLattice.Properties where

open import Cubical.Foundations.Prelude
open import Cubical.Foundations.Isomorphism
open import Cubical.Foundations.Powerset
open import Cubical.Foundations.Equiv
open import Cubical.Foundations.HLevels
open import Cubical.Foundations.SIP

-- open import Cubical.Functions.FunExtEquiv

open import Cubical.Data.Sigma

-- open import Cubical.Displayed.Base
-- open import Cubical.Displayed.Auto
-- open import Cubical.Displayed.Record
-- open import Cubical.Displayed.Universe

open import Cubical.Algebra.CommRing
open import Cubical.Algebra.Semilattice
open import Cubical.Algebra.Lattice
open import Cubical.Algebra.DistLattice
-- open import Cubical.Algebra.DistLattice.DownSet
-- open import Cubical.Algebra.ZariskiLattice.UniversalProperty

open import Cubical.Categories.Category.Base
open import Cubical.Categories.Functor
open import Cubical.Categories.NaturalTransformation

open import Cubical.Categories.Instances.CommRings
open import Cubical.Categories.Instances.DistLattice
-- open import Cubical.Categories.Instances.Semilattice
open import Cubical.Categories.Instances.Poset

open import Cubical.Categories.DistLatticeSheaf.Diagram
open import Cubical.Categories.DistLatticeSheaf.Base

-- open import Cubical.Relation.Binary
-- open import Cubical.Relation.Binary.Poset

open import Cubical.Reflection.RecordEquiv

open import Cubical.Algebra.RingedLattice.Base

private
  variable
    ‚Ñì ‚Ñì' ‚Ñì'' : Level

module _ where
  open RingedLattice
  open RingedLatticeHom

  compRingedLatticeHom : (X : RingedLattice ‚Ñì) (Y : RingedLattice ‚Ñì') (Z : RingedLattice ‚Ñì'')
                       ‚Üí RingedLatticeHom X Y ‚Üí RingedLatticeHom Y Z ‚Üí RingedLatticeHom X Z
  œÄ (compRingedLatticeHom X Y Z f g) = compDistLatticeHom _ _ _ (f .œÄ) (g .œÄ)
  œÄ‚ôØ (compRingedLatticeHom X Y Z f g) u = compCommRingHom _ _ _ (f .œÄ‚ôØ u) (g .œÄ‚ôØ (f .œÄ .fst u))
  isNatœÄ‚ôØ (compRingedLatticeHom X Y Z f g) u v u‚â•v =
    (g .œÄ‚ôØ (f .œÄ .fst v) ‚àòcr (f .œÄ‚ôØ v)) ‚àòcr X .ùìï .Functor.F-hom u‚â•v ‚â°‚ü® {!!} ‚ü©
    (Z .ùìï .Functor.F-hom (pres‚â§ (g .œÄ ‚àòdl f .œÄ) u‚â•v)) ‚àòcr (g .œÄ‚ôØ (f .œÄ .fst u) ‚àòcr f .œÄ‚ôØ u) ‚àé

  _‚àòrl_ : {X : RingedLattice ‚Ñì} {Y : RingedLattice ‚Ñì'} {Z : RingedLattice ‚Ñì''}
        ‚Üí RingedLatticeHom Y Z ‚Üí RingedLatticeHom X Y ‚Üí RingedLatticeHom X Z
  g ‚àòrl f = compRingedLatticeHom _ _ _ f g

  -- compIdRingedLatticeHom : {X Y : RingedLattice ‚Ñì} (f : RingedLatticeHom X Y)
  --                        ‚Üí compRingedLatticeHom _ _ _ (idRingedLatticeHom X) f ‚â° f
  -- compIdRingedLatticeHom = ?

  -- idCompRingedLatticeHom : {X Y : RingedLattice ‚Ñì} (f : RingedLatticeHom X Y)
  --                        ‚Üí compRingedLatticeHom _ _ _ f (idRingedLatticeHom Y) ‚â° f
  -- idCompRingedLatticeHom = ?

  -- compAssocRingedLatticeHom : {X Y Z U : RingedLattice ‚Ñì}
  --                             (f : RingedLatticeHom X Y)
  --                             (g : RingedLatticeHom Y Z)
  --                             (h : RingedLatticeHom Z U)
  --                           ‚Üí compRingedLatticeHom _ _ _ (compRingedLatticeHom _ _ _ f g) h
  --                           ‚â° compRingedLatticeHom _ _ _ f (compRingedLatticeHom _ _ _ g h)
  -- compAssocRingedLatticeHom = {!!}
